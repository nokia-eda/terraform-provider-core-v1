// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package datasource_alarm

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
)

func AlarmDataSourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"acknowledged": schema.BoolAttribute{
				Computed:            true,
				Description:         "An indication if the alarm has been acknowledged.",
				MarkdownDescription: "An indication if the alarm has been acknowledged.",
			},
			"acknowledged_until": schema.StringAttribute{
				Computed:            true,
				Description:         "Indicates the end time of the acknowledgement.",
				MarkdownDescription: "Indicates the end time of the acknowledgement.",
			},
			"alarmname": schema.StringAttribute{
				Required:            true,
				Description:         "The name of the alarm to retrieve",
				MarkdownDescription: "The name of the alarm to retrieve",
			},
			"all": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "requests all alarms; the default is to filter-out suppressed alarms.\nValue must be \"true\" to get information about a suppressed alarm.",
				MarkdownDescription: "requests all alarms; the default is to filter-out suppressed alarms.\nValue must be \"true\" to get information about a suppressed alarm.",
			},
			"cleared": schema.BoolAttribute{
				Computed:            true,
				Description:         "An indication if the alarm has been cleared.",
				MarkdownDescription: "An indication if the alarm has been cleared.",
			},
			"cluster_member": schema.StringAttribute{
				Computed:            true,
				Description:         "The cluster member that generated this alarm.",
				MarkdownDescription: "The cluster member that generated this alarm.",
			},
			"description": schema.StringAttribute{
				Computed:            true,
				Description:         "A description for the alarm.",
				MarkdownDescription: "A description for the alarm.",
			},
			"group": schema.StringAttribute{
				Computed:            true,
				Description:         "Indicates the group of the resource the alarm is present on.",
				MarkdownDescription: "Indicates the group of the resource the alarm is present on.",
			},
			"js_path": schema.StringAttribute{
				Computed:            true,
				Description:         "a unnormalized jspath relating to the object in the alarm state. For\nexample\n.node{.name==\"spine-1-1\"}.srl{.version==\"24.10.1\"}.interface{.name==\"ethernet-1-1\"}.",
				MarkdownDescription: "a unnormalized jspath relating to the object in the alarm state. For\nexample\n.node{.name==\"spine-1-1\"}.srl{.version==\"24.10.1\"}.interface{.name==\"ethernet-1-1\"}.",
			},
			"kind": schema.StringAttribute{
				Computed:            true,
				Description:         "Indicates the kind of resource the alarm is present on.",
				MarkdownDescription: "Indicates the kind of resource the alarm is present on.",
			},
			"last_acknowledged": schema.StringAttribute{
				Computed:            true,
				Description:         "the time this alarm was last acknowledged.",
				MarkdownDescription: "the time this alarm was last acknowledged.",
			},
			"last_changed": schema.StringAttribute{
				Computed:            true,
				Description:         "The last time that the alarm was changed; as provided by the raiser of the alarm.",
				MarkdownDescription: "The last time that the alarm was changed; as provided by the raiser of the alarm.",
			},
			"last_suppressed": schema.StringAttribute{
				Computed:            true,
				Description:         "the time this alarm was last suppressed.",
				MarkdownDescription: "the time this alarm was last suppressed.",
			},
			"name": schema.StringAttribute{
				Computed:            true,
				Description:         "The unique name for the alarm, e.g. InterfaceDown-spine-1-1-ethernet-1-1.",
				MarkdownDescription: "The unique name for the alarm, e.g. InterfaceDown-spine-1-1-ethernet-1-1.",
			},
			"namespace": schema.StringAttribute{
				Computed:            true,
				Description:         "The namespace of the alarm",
				MarkdownDescription: "The namespace of the alarm",
			},
			"ns_name": schema.StringAttribute{
				Required:            true,
				Description:         "The namespace to fetch the alarm from",
				MarkdownDescription: "The namespace to fetch the alarm from",
			},
			"occurrences": schema.Int64Attribute{
				Computed:            true,
				Description:         "The number of occurrences of this alarm (the number of times it has been raised).",
				MarkdownDescription: "The number of occurrences of this alarm (the number of times it has been raised).",
			},
			"parent_alarms": schema.ListAttribute{
				ElementType:         types.StringType,
				Computed:            true,
				Description:         "The names of other alarms that are parents of this alarm. This may be used to\nfilter out alarms that are not a root cause.",
				MarkdownDescription: "The names of other alarms that are parents of this alarm. This may be used to\nfilter out alarms that are not a root cause.",
			},
			"probable_cause": schema.StringAttribute{
				Computed:            true,
				Description:         "the probable cause for raising the alarm. This field is optional, and\nshould also be a description indicating the primary probable cause of the\nalarm, which may be enriched with relevant information from this specific\nalarm instance. The complete alarm below contains an example.",
				MarkdownDescription: "the probable cause for raising the alarm. This field is optional, and\nshould also be a description indicating the primary probable cause of the\nalarm, which may be enriched with relevant information from this specific\nalarm instance. The complete alarm below contains an example.",
			},
			"remedial_action": schema.StringAttribute{
				Computed:            true,
				Description:         "any remedial actions the user could try to resolve/clear the alarm. This\nfield is optional, and may also be enriched with relevant information\nfrom this specific alarm instance. The complete alarm below contains an\nexample.",
				MarkdownDescription: "any remedial actions the user could try to resolve/clear the alarm. This\nfield is optional, and may also be enriched with relevant information\nfrom this specific alarm instance. The complete alarm below contains an\nexample.",
			},
			"resource": schema.StringAttribute{
				Computed:            true,
				Description:         "The name of the resource that this alarm is present on.",
				MarkdownDescription: "The name of the resource that this alarm is present on.",
			},
			"severity": schema.StringAttribute{
				Computed:            true,
				Description:         "Severity of the alarm",
				MarkdownDescription: "Severity of the alarm",
			},
			"source_group": schema.StringAttribute{
				Computed:            true,
				Description:         "Indicates indicates the group of the resource that raised this alarm, e.g. interfaces.eda.nokia.com.",
				MarkdownDescription: "Indicates indicates the group of the resource that raised this alarm, e.g. interfaces.eda.nokia.com.",
			},
			"source_kind": schema.StringAttribute{
				Computed:            true,
				Description:         "Indicates the Kind of the resource that raised this alarm, e.g. InterfaceState.",
				MarkdownDescription: "Indicates the Kind of the resource that raised this alarm, e.g. InterfaceState.",
			},
			"source_resource": schema.StringAttribute{
				Computed:            true,
				Description:         "Indicates the the name of the resource that raised this alarm, e.g. spine-1-1-ethernet-1-1.",
				MarkdownDescription: "Indicates the the name of the resource that raised this alarm, e.g. spine-1-1-ethernet-1-1.",
			},
			"suppressed": schema.BoolAttribute{
				Computed:            true,
				Description:         "An indication if the alarm has been suppressed.",
				MarkdownDescription: "An indication if the alarm has been suppressed.",
			},
			"suppressed_until": schema.StringAttribute{
				Computed:            true,
				Description:         "Indicates the end time of the suppression.",
				MarkdownDescription: "Indicates the end time of the suppression.",
			},
			"type": schema.StringAttribute{
				Computed:            true,
				Description:         "A kind for the alarm, e.g. InterfaceDown",
				MarkdownDescription: "A kind for the alarm, e.g. InterfaceDown",
			},
		},
	}
}

type AlarmModel struct {
	Acknowledged      types.Bool   `tfsdk:"acknowledged"`
	AcknowledgedUntil types.String `tfsdk:"acknowledged_until"`
	Alarmname         types.String `tfsdk:"alarmname"`
	All               types.Bool   `tfsdk:"all"`
	Cleared           types.Bool   `tfsdk:"cleared"`
	ClusterMember     types.String `tfsdk:"cluster_member"`
	Description       types.String `tfsdk:"description"`
	Group             types.String `tfsdk:"group"`
	JsPath            types.String `tfsdk:"js_path"`
	Kind              types.String `tfsdk:"kind"`
	LastAcknowledged  types.String `tfsdk:"last_acknowledged"`
	LastChanged       types.String `tfsdk:"last_changed"`
	LastSuppressed    types.String `tfsdk:"last_suppressed"`
	Name              types.String `tfsdk:"name"`
	Namespace         types.String `tfsdk:"namespace"`
	NsName            types.String `tfsdk:"ns_name"`
	Occurrences       types.Int64  `tfsdk:"occurrences"`
	ParentAlarms      types.List   `tfsdk:"parent_alarms"`
	ProbableCause     types.String `tfsdk:"probable_cause"`
	RemedialAction    types.String `tfsdk:"remedial_action"`
	Resource          types.String `tfsdk:"resource"`
	Severity          types.String `tfsdk:"severity"`
	SourceGroup       types.String `tfsdk:"source_group"`
	SourceKind        types.String `tfsdk:"source_kind"`
	SourceResource    types.String `tfsdk:"source_resource"`
	Suppressed        types.Bool   `tfsdk:"suppressed"`
	SuppressedUntil   types.String `tfsdk:"suppressed_until"`
	Type              types.String `tfsdk:"type"`
}
